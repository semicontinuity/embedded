MCU                                     = at90s2313
WHOLE_PROGRAM                           = 1
FIXED_REGISTERS                         = -ffixed-r2 -ffixed-r3 -ffixed-r4 -ffixed-r5 -ffixed-r26 -ffixed-r27 -ffixed-r28 -ffixed-r29

# CPU
# Internal RC oscillator
# ==============================================================================
F_CPU                                   = 7372800UL

# INT0
# ==============================================================================
INT0_vect_attrs                         = 
INT0_vect_naked                         = 1
int0__run                               = lcd_tap__on_e_pin_low

# TIMER0
# ==============================================================================
TIMER0_OVERFLOW_vect_naked              = 1
timer0__overflow__run                   = system_timer__on_event

# USART0
# ==============================================================================
USART0__BAUD_RATE                       = 57600UL

usart0__rx__on_data                     = comm__rx__on_data
usart0__rx__complete__interrupt__NAKED  = 1
usart0__rx__complete__interrupt__ATTRS  = 
USART0__RX__DATA__REG                   = 2

usart0__tx__has_next                    = comm__tx__has_next
usart0__tx__next                        = comm__tx__next
usart0__tx__on_done                     = comm__tx__on_done
usart0__tx__data_register_empty__interrupt__NAKED = 1
usart0__tx__data_register_empty__interrupt__ATTRS =
USART0__TX__DATA__REG                   = 3

# TX ring buffer
# ==============================================================================
TX_RING_BUFFER__ALIGNED                 = 1
TX_RING_BUFFER__SIZE                    = 32
TX_RING_BUFFER__HEAD__REG               = 26
TX_RING_BUFFER__TAIL__REG               = 28

# TX Buffer NotEmpty flag coinsides with USART's data register empty interrupt
# enable bit. Interrupt is automatically enabled when TX buffer is not empty
TX_RING_BUFFER__NOT_EMPTY__HOST         = usart0__tx__data_register_empty__interrupt__enabled__HOST
TX_RING_BUFFER__NOT_EMPTY__BIT          = usart0__tx__data_register_empty__interrupt__enabled__BIT
# TX Buffer NotFull flag placed into ACSR register, unused
TX_RING_BUFFER__NOT_FULL__HOST          = ACSR
TX_RING_BUFFER__NOT_FULL__BIT           = ACIC


# Outputs 
# ==============================================================================

RTS__PORT                               = D
RTS__PIN                                = 3


# Inputs/Outputs 
# ==============================================================================

# Watched and driven buttons
# All buttons MUST be on the same port in a continuous block
# NB: LCD data pins are multiplexed with buttons 1-4
BUTTONS_TAP__PORT                       = B
BUTTONS_TAP__PIN                        = 0
BUTTONS_TAP__MASK                       = ((1<<(BUTTONS_TAP__PIN+0))|(1<<(BUTTONS_TAP__PIN+1))|(1<<(BUTTONS_TAP__PIN+2))|(1<<(BUTTONS_TAP__PIN+3))|(1<<(BUTTONS_TAP__PIN+4))|(1<<(BUTTONS_TAP__PIN+5)))


# Inputs
# ==============================================================================

# Watched LEDs 
# All LEDs MUST be on the same port in a continuous block
LEDS_TAP__PORT                          = D
LEDS_TAP__PIN                           = 4
LEDS_TAP__MASK                          = ((1<<(LEDS_TAP__PIN+0))|(1<<(LEDS_TAP__PIN+1))|(1<<(LEDS_TAP__PIN+2)))


# LCD watcher
# LCD Data pins must be adjacent, all signals except E must be on the same port
# E signal must be connected to INT0.
# NB: LCD data pins are multiplexed with buttons 1-4
# ==============================================================================
LCD_TAP__PORT                           = B
LCD_TAP__DATA__PIN                      = 0
LCD_TAP__RES__PIN                       = 6
LCD_TAP__RW__PIN                        = 7
LCD_TAP__E__PORT                        = D
LCD_TAP__E__PIN                         = 2
lcd_tap__on_event                       = pool_controller__on_lcd_event

# Services
# ==============================================================================

BUTTONS_SCANNER__STATE__REG             = 4
buttons_scanner__status__on_change      = pool_controller__on_buttons_scanner_event

LEDS_SCANNER__STATE__REG                = 5
leds_scanner__status__on_change         = pool_controller__on_leds_scanner_event

# Compilation
# ==============================================================================
MCU                                             = atmega328p
OPT                                             = 2 -Wa,-a,-ad -finline-functions -fpredictive-commoning -fgcse-after-reload -fvect-cost-model  -fipa-cp-clone -ftree-loop-distribute-patterns -ftree-slp-vectorize
INLINE                                          =
FIXED_REGISTERS                                 = -ffixed-r26 -ffixed-r27 -ffixed-r28 -ffixed-r29

# System
# ==============================================================================
F_CPU                                           = 16000000UL

# Pins
# ==============================================================================
IN__BUTTON1__PORT                               = D
IN__BUTTON1__PIN                                = 4
IN__BUTTON2__PORT                               = D
IN__BUTTON2__PIN                                = 5
IN__BUTTON3__PORT                               = D
IN__BUTTON3__PIN                                = 6
IN__BUTTON4__PORT                               = D
IN__BUTTON4__PIN                                = 7
IN__BUTTON5__PORT                               = D
IN__BUTTON5__PIN                                = 3
IN__BUTTON6__PORT                               = D
IN__BUTTON6__PIN                                = 2
IN__BUTTON7__PORT                               = B
IN__BUTTON7__PIN                                = 3
IN__BUTTON8__PORT                               = B
IN__BUTTON8__PIN                                = 0
IN__BUTTON9__PORT                               = C
IN__BUTTON9__PIN                                = 3
IN__BUTTON10__PORT                              = C
IN__BUTTON10__PIN                               = 1
IN__BUTTON11__PORT                              = B
IN__BUTTON11__PIN                               = 5
IN__BUTTON12__PORT                              = B
IN__BUTTON12__PIN                               = 1
IN__BUTTON13__PORT                              = C
IN__BUTTON13__PIN                               = 2
IN__BUTTON14__PORT                              = C
IN__BUTTON14__PIN                               = 0
IN__BUTTON15__PORT                              = B
IN__BUTTON15__PIN                               = 4
IN__BUTTON16__PORT                              = B
IN__BUTTON16__PIN                               = 2

OUT__LED1__PORT                                 = C
OUT__LED1__PIN                                  = 4
OUT__LED2__PORT                                 = C
OUT__LED2__PIN                                  = 5
OUT__LED3__PORT                                 = D
OUT__LED3__PIN                                  = 0

# Keyboard
# ==============================================================================
pin_change_int0__run                            = keyboard__port_b__on_change
pin_change_int1__run                            = keyboard__port_c__on_change
pin_change_int2__run                            = keyboard__port_d__on_change

# USART0
# ==============================================================================
USART0__BAUD_RATE                       = 9600UL
usart0__tx__has_next                    = comm__tx__has_next
usart0__tx__next                        = comm__tx__next
usart0__tx__on_done                     = comm__tx__on_done
#usart0__tx__data_register_empty__interrupt__NAKED = 1
usart0__tx__data_register_empty__interrupt__ATTRS =

# TX ring buffer
# ==============================================================================
TX_RING_BUFFER__ALIGNED                 = 1
TX_RING_BUFFER__SIZE                    = 128
TX_RING_BUFFER__HEAD__REG               = 26
TX_RING_BUFFER__TAIL__REG               = 28

# TX Buffer NotEmpty flag coincides with USART's data register empty interrupt
# enable bit. Interrupt is automatically enabled when TX buffer is not empty
TX_RING_BUFFER__NOT_EMPTY__HOST         = usart0__tx__data_register_empty__interrupt__enabled__HOST
TX_RING_BUFFER__NOT_EMPTY__BIT          = usart0__tx__data_register_empty__interrupt__enabled__BIT
# TX Buffer NotFull flag placed into ACSR register, unused
TX_RING_BUFFER__NOT_FULL__HOST          = GPIOR0
TX_RING_BUFFER__NOT_FULL__BIT           = 0
TX_RING_BUFFER__NOT_FULL__IN_BIT_IO_MEM = 1
